{"version":3,"sources":["services/table.service.js","components/table-visualizer.js","App.js","index.js"],"names":["getTables","_getTables","apply","this","arguments","_callee","response","tables","_regeneratorRuntime","wrap","_context","prev","next","fetch","method","sent","json","console","log","abrupt","stop","_callee2","tableName","tableData","_context2","TableVisualizer","_useState","useState","_useState2","Object","slicedToArray","setTables","_useState3","_useState4","selectedTable","setSelectedTable","_useState5","_useState6","setTableData","_useState7","_useState8","columns","setColumns","_useState9","_useState10","loading","setLoading","useEffect","_callGetTables","asyncToGenerator","table_visualizer_regeneratorRuntime","mark","callGetTables","react_default","a","createElement","value","className","onChange","event","target","_x","_getTableData","getTableData","then","data","length","cols","keys","map","table","i","key","class","role","column","row","App","table_visualizer","ReactDOM","createRoot","document","getElementById","render","src_App"],"mappings":"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","file":"static/js/main.9167996b.chunk.js","sourcesContent":["\n// const base = window.location.protocol +\"//\"+ window.location.hostname + \":4000\";\n\nexport async function getTables(){\n\n    const response = await fetch(\"/api/tables\",{\n        method: \"GET\"\n    });\n    const tables = await response.json();\n    console.log(tables);\n    return tables;\n}\n\nexport async function getTableData(tableName){\n\n    const response = await fetch(\"/api/tables/\" + tableName + \"/data\",{\n        method: \"GET\"\n    });\n    const tableData = await response.json();\n    console.log(tableData);\n    return tableData;\n}","// src/components/basic.table.js\nimport React, {useEffect, useState} from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { getTables, getTableData} from '../services/table.service';\n\n\nfunction TableVisualizer() {\n\n    const [tables, setTables] = useState([]);\n    const [selectedTable, setSelectedTable] = useState(null);\n    const [tableData, setTableData] = useState([]);\n    const [columns, setColumns] = useState([]);\n    const [loading, setLoading] = useState(false);\n\n    function updateSelectedTable(event){\n        console.log(event.target.value);\n        setLoading(true);\n        setSelectedTable(event.target.value);\n        \n        getTableData(event.target.value)\n        .then(data=>{\n            setLoading(false);\n            if(data && data.length){\n                setTableData(data);\n                let cols = Object.keys(data[0]);\n                setColumns(cols);\n            }\n        });\n    }\n\n    useEffect(()=>{\n        async function callGetTables(){\n            let tables = await getTables();\n            setTables(tables);\n        }\n        callGetTables();\n    },[]);\n\n    return (\n        <div>\n            <select value={selectedTable} className=\"form-select\" onChange={updateSelectedTable}>\n                <option value={null}>--select table--</option>\n                {tables.map((table, i) => {\n                    return <option key={i} value={table}>{table}</option>\n                })}\n            </select>\n\n            {loading && <div class=\"spinner-border text-danger\" role=\"status\"></div>}\n\n            {!loading && <table className=\"table\">\n                <thead>\n                    <tr>{columns.map( (column, i) => {\n                        return <td key={i+'header'}>{column}</td>\n                    })}</tr>\n                </thead>\n                <tbody>\n                    {tableData.map((row, i) =>{\n                        return <tr key={i+'row'}>\n                            {columns.map(column=>{\n                                return <td key={i+'cell'}>{row[column]}</td>\n                            })}\n                        </tr>\n                    })}\n                </tbody>\n            </table>}\n        </div>\n    )\n}\n\nexport default TableVisualizer;","// App.js\nimport React from 'react';\nimport './App.css';\nimport TableVisualizer from './components/table-visualizer';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n\n      <h3>Database Table visualizer</h3>\n\n      <TableVisualizer />\n\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  // <React.StrictMode>\n  //   <App />\n  // </React.StrictMode>\n  <App />\n);\n"],"sourceRoot":""}